// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const html = dart_sdk.html;
  const collection = dart_sdk.collection;
  const typed_data = dart_sdk.typed_data;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const js_util = dart_sdk.js_util;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const scaffold = flutter_sdk.src__material__scaffold;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const text = flutter_sdk.src__widgets__text;
  const app_bar = flutter_sdk.src__material__app_bar;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const image = flutter_sdk.src__widgets__image;
  const box_fit = flutter_sdk.src__painting__box_fit;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const alignment = flutter_sdk.src__painting__alignment;
  const image_stream = flutter_sdk.src__painting__image_stream;
  const text_style = flutter_sdk.src__painting__text_style;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const colors$ = flutter_sdk.src__painting__colors;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const message_codec = flutter_sdk.src__services__message_codec;
  const platform = flutter_sdk.src__foundation__platform;
  const system_chrome = flutter_sdk.src__services__system_chrome;
  const system_navigator = flutter_sdk.src__services__system_navigator;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const stack = flutter_sdk.src__rendering__stack;
  const platform_view = flutter_sdk.src__widgets__platform_view;
  const basic_types = flutter_sdk.src__foundation__basic_types;
  const recognizer = flutter_sdk.src__gestures__recognizer;
  const platform_view$ = flutter_sdk.src__rendering__platform_view;
  const platform_views = flutter_sdk.src__services__platform_views;
  const system_channels = flutter_sdk.src__services__system_channels;
  const url_strategy = flutter_sdk.src__navigation__url_strategy;
  const events = flutter_sdk.src__gestures__events;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var url_launcher = Object.create(dart.library);
  var url_launcher_web = Object.create(dart.library);
  var legacy_api = Object.create(dart.library);
  var types = Object.create(dart.library);
  var url_launcher_uri = Object.create(dart.library);
  var link = Object.create(dart.library);
  var url_launcher_platform_interface = Object.create(dart.library);
  var link$ = Object.create(dart.library);
  var dart_ui = Object.create(dart.library);
  var url_launcher_string = Object.create(dart.library);
  var type_conversion = Object.create(dart.library);
  var types$ = Object.create(dart.library);
  var url_launcher_platform = Object.create(dart.library);
  var dart_ui_real = Object.create(dart.library);
  var url_launcher_string$ = Object.create(dart.library);
  var plugin_platform_interface = Object.create(dart.library);
  var method_channel_url_launcher = Object.create(dart.library);
  var $toString = dartx.toString;
  var $navigator = dartx.navigator;
  var $open = dartx.open;
  var $startsWith = dartx.startsWith;
  var $userAgent = dartx.userAgent;
  var $contains = dartx.contains;
  var $trimLeft = dartx.trimLeft;
  var $_equals = dartx._equals;
  var $isEmpty = dartx.isEmpty;
  var $onClick = dartx.onClick;
  var $_set = dartx._set;
  var $_get = dartx._get;
  var $style = dartx.style;
  var $opacity = dartx.opacity;
  var $display = dartx.display;
  var $width = dartx.width;
  var $height = dartx.height;
  var $cursor = dartx.cursor;
  var $setAttribute = dartx.setAttribute;
  var $removeAttribute = dartx.removeAttribute;
  var $remove = dartx.remove;
  var $target = dartx.target;
  var $shadowRoot = dartx.shadowRoot;
  var $tagName = dartx.tagName;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    ImageChunkEventN: () => (T.ImageChunkEventN = dart.constFn(dart.nullable(image_stream.ImageChunkEvent)))(),
    BuildContextAndWidgetAndImageChunkEventNToWidget: () => (T.BuildContextAndWidgetAndImageChunkEventNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, framework.Widget, T.ImageChunkEventN()])))(),
    StackTraceN: () => (T.StackTraceN = dart.constFn(dart.nullable(core.StackTrace)))(),
    BuildContextAndObjectAndStackTraceNToCenter: () => (T.BuildContextAndObjectAndStackTraceNToCenter = dart.constFn(dart.fnType(basic.Center, [framework.BuildContext, core.Object, T.StackTraceN()])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    LinkInfoToWebLinkDelegate: () => (T.LinkInfoToWebLinkDelegate = dart.constFn(dart.fnType(link$.WebLinkDelegate, [link.LinkInfo])))(),
    FutureOfbool: () => (T.FutureOfbool = dart.constFn(async.Future$(core.bool)))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ExpandoOfObject: () => (T.ExpandoOfObject = dart.constFn(core.Expando$(core.Object)))(),
    LinkedHashSetOfString: () => (T.LinkedHashSetOfString = dart.constFn(collection.LinkedHashSet$(core.String)))(),
    CompleterOfByteData: () => (T.CompleterOfByteData = dart.constFn(async.Completer$(typed_data.ByteData)))(),
    FutureOrOfByteData: () => (T.FutureOrOfByteData = dart.constFn(async.FutureOr$(typed_data.ByteData)))(),
    FutureOrNOfByteData: () => (T.FutureOrNOfByteData = dart.constFn(dart.nullable(T.FutureOrOfByteData())))(),
    FutureOrNOfByteDataTovoid: () => (T.FutureOrNOfByteDataTovoid = dart.constFn(dart.fnType(dart.void, [], [T.FutureOrNOfByteData()])))(),
    FutureOfvoid: () => (T.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    PlatformViewCreationParamsToLinkViewController: () => (T.PlatformViewCreationParamsToLinkViewController = dart.constFn(dart.fnType(link$.LinkViewController, [platform_view.PlatformViewCreationParams])))(),
    FactoryOfOneSequenceGestureRecognizer: () => (T.FactoryOfOneSequenceGestureRecognizer = dart.constFn(basic_types.Factory$(recognizer.OneSequenceGestureRecognizer)))(),
    BuildContextAndPlatformViewControllerToPlatformViewSurface: () => (T.BuildContextAndPlatformViewControllerToPlatformViewSurface = dart.constFn(dart.fnType(platform_view.PlatformViewSurface, [framework.BuildContext, platform_views.PlatformViewController])))(),
    MouseEventTovoid: () => (T.MouseEventTovoid = dart.constFn(dart.fnType(dart.void, [html.MouseEvent])))(),
    voidToNull: () => (T.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    IdentityMapOfint$LinkViewController: () => (T.IdentityMapOfint$LinkViewController = dart.constFn(_js_helper.IdentityMap$(core.int, link$.LinkViewController)))(),
    intN: () => (T.intN = dart.constFn(dart.nullable(core.int)))(),
    intToElement: () => (T.intToElement = dart.constFn(dart.fnType(html.Element, [core.int])))(),
    IdentityMapOfString$Object: () => (T.IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))(),
    boolN: () => (T.boolN = dart.constFn(dart.nullable(core.bool)))(),
    boolNTobool: () => (T.boolNTobool = dart.constFn(dart.fnType(core.bool, [T.boolN()])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.HomeScreen.prototype,
        [Widget_key]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: ui.Clip.prototype,
        [_Enum__name]: "hardEdge",
        [_Enum_index]: 1
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_Enum__name]: "down",
        [_Enum_index]: 5
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 4000000
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Вы уже поставили лайк!"
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[3] || CT.C3,
        [SnackBar_dismissDirection]: C[4] || CT.C4,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[5] || CT.C5,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: null,
        [SnackBar_content]: C[6] || CT.C6
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Общежития КубГАУ"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: progress_indicator._ActivityIndicatorType.prototype,
        [_Enum__name]: "material",
        [_Enum_index]: 0
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [Widget_key]: null,
        [ProgressIndicator_semanticsValue]: null,
        [ProgressIndicator_semanticsLabel]: null,
        [ProgressIndicator_valueColor]: null,
        [ProgressIndicator_color]: null,
        [ProgressIndicator_backgroundColor]: null,
        [ProgressIndicator_value]: null,
        [CircularProgressIndicator_strokeWidth]: 4,
        [CircularProgressIndicator__indicatorType]: C[12] || CT.C12
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[11] || CT.C11,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[13] || CT.C13
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Ошибка загрузки изображения"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[15] || CT.C15,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[13] || CT.C13
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[18] || CT.C18,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[17] || CT.C17,
        [Text_textSpan]: null,
        [Text_data]: "Общежитие №20"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 420
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962158
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954450
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293892762
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293227379
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293874512
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294198070
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293212469
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292030255
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291176488
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290190364
      });
    },
    get C22() {
      return C[22] = dart.constMap(core.int, ui.Color, [50, C[23] || CT.C23, 100, C[24] || CT.C24, 200, C[25] || CT.C25, 300, C[26] || CT.C26, 400, C[27] || CT.C27, 500, C[28] || CT.C28, 600, C[29] || CT.C29, 700, C[30] || CT.C30, 800, C[31] || CT.C31, 900, C[32] || CT.C32]);
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294198070,
        [ColorSwatch__swatch]: C[22] || CT.C22
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57947
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[21] || CT.C21,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[33] || CT.C33
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[18] || CT.C18,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[21] || CT.C21,
        [TextStyle_inherit]: true
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 4,
        [SizedBox_width]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294638330
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294309365
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848814
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292269782
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290624957
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288585374
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285887861
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284572001
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282532418
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281348144
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280361249
      });
    },
    get C39() {
      return C[39] = dart.constMap(core.int, ui.Color, [50, C[40] || CT.C40, 100, C[41] || CT.C41, 200, C[42] || CT.C42, 300, C[43] || CT.C43, 350, C[44] || CT.C44, 400, C[45] || CT.C45, 500, C[46] || CT.C46, 600, C[47] || CT.C47, 700, C[48] || CT.C48, 800, C[49] || CT.C49, 850, C[50] || CT.C50, 900, C[51] || CT.C51]);
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4288585374,
        [ColorSwatch__swatch]: C[39] || CT.C39
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[38] || CT.C38,
        [TextStyle_inherit]: true
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[37] || CT.C37,
        [Text_textSpan]: null,
        [Text_data]: "Краснодар, ул. Калинина, 13"
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293457385
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291356361
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289058471
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4286695300
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284922730
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283215696
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282622023
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281896508
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281236786
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279983648
      });
    },
    get C54() {
      return C[54] = dart.constMap(core.int, ui.Color, [50, C[55] || CT.C55, 100, C[56] || CT.C56, 200, C[57] || CT.C57, 300, C[58] || CT.C58, 400, C[59] || CT.C59, 500, C[60] || CT.C60, 600, C[61] || CT.C61, 700, C[62] || CT.C62, 800, C[63] || CT.C63, 900, C[64] || CT.C64]);
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4283215696,
        [ColorSwatch__swatch]: C[54] || CT.C54
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57638
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[53] || CT.C53,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[65] || CT.C65
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[53] || CT.C53,
        [TextStyle_inherit]: true
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[67] || CT.C67,
        [Text_textSpan]: null,
        [Text_data]: "ПОЗВОНИТЬ"
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 57809
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[53] || CT.C53,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[69] || CT.C69
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[67] || CT.C67,
        [Text_textSpan]: null,
        [Text_data]: "МАРШРУТ"
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58771
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: C[53] || CT.C53,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[72] || CT.C72
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[67] || CT.C67,
        [Text_textSpan]: null,
        [Text_data]: "ПОДЕЛИТЬСЯ"
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[75] || CT.C75,
        [Text_textSpan]: null,
        [Text_data]: "Студенческий городок или так называемый кампус Кубанского ГАУ состоит из двадцати общежитий, в которых проживает более 8000 студентов, что составляет 96% от всех нуждающихся. Студенты первого курса обеспечены местами в общежитии полностью. В соответствии с Положением о студенческих общежитиях университета, при поселении между администрацией и студентами заключается договор найма жилого помещения. Воспитательная работа в общежитиях направлена на улучшение быта, соблюдение правил внутреннего распорядка, отсутствия асоциальных явлений в молодежной среде. Условия проживания в общежитиях университетского кампуса полностью отвечают санитарным нормам и требованиям: наличие оборудованных кухонь, душевых комнат, прачечных, читальных залов, комнат самоподготовки, помещений для заседаний студенческих советов и наглядной агитации. С целью улучшения условий быта студентов активно работает система студенческого самоуправления - студенческие советы организуют всю работу по самообслуживанию."
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C77() {
      return C[77] = dart.constMap(core.String, core.String, []);
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C79() {
      return C[79] = dart.constSet(core.String, ["mailto", "tel", "sms"]);
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: types.LaunchMode.prototype,
        [_Enum__name]: "platformDefault",
        [_Enum_index]: 0
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: types.LaunchMode.prototype,
        [_Enum__name]: "inAppWebView",
        [_Enum_index]: 1
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: types.LaunchMode.prototype,
        [_Enum__name]: "externalApplication",
        [_Enum_index]: 2
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: types.LaunchMode.prototype,
        [_Enum__name]: "externalNonBrowserApplication",
        [_Enum_index]: 3
      });
    },
    get C80() {
      return C[80] = dart.constList([C[81] || CT.C81, C[82] || CT.C82, C[83] || CT.C83, C[84] || CT.C84], types.LaunchMode);
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: types.WebViewConfiguration.prototype,
        [headers$]: C[77] || CT.C77,
        [enableDomStorage$]: true,
        [enableJavaScript$]: true
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: link.LinkTarget.prototype,
        [debugLabel$]: "defaultTarget"
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: link.LinkTarget.prototype,
        [debugLabel$]: "self"
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: link.LinkTarget.prototype,
        [debugLabel$]: "blank"
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: message_codecs.JSONMethodCodec.prototype
      });
    },
    get C90() {
      return C[90] = dart.constSet(T.FactoryOfOneSequenceGestureRecognizer(), []);
    },
    get C91() {
      return C[91] = dart.fn(link$.LinkViewController._onGlobalClick, T.MouseEventTovoid());
    },
    get C92() {
      return C[92] = dart.fn(link$.LinkViewController._viewFactory, T.intToElement());
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "platformDefault",
        [_Enum_index]: 0
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "inAppWebView",
        [_Enum_index]: 1
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "inAppBrowserView",
        [_Enum_index]: 2
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "externalApplication",
        [_Enum_index]: 3
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: types$.PreferredLaunchMode.prototype,
        [_Enum__name]: "externalNonBrowserApplication",
        [_Enum_index]: 4
      });
    },
    get C93() {
      return C[93] = dart.constList([C[94] || CT.C94, C[95] || CT.C95, C[96] || CT.C96, C[97] || CT.C97, C[98] || CT.C98], types$.PreferredLaunchMode);
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: types$.InAppWebViewConfiguration.prototype,
        [headers$0]: C[77] || CT.C77,
        [enableDomStorage$0]: true,
        [enableJavaScript$0]: true
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C[102] || CT.C102
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[101] || CT.C101,
        [MethodChannel_name]: "plugins.flutter.io/url_launcher"
      });
    }
  }, false);
  var C = Array(103).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart",
    "package:plugin_platform_interface/plugin_platform_interface.dart",
    "package:url_launcher_platform_interface/src/url_launcher_platform.dart",
    "package:url_launcher_web/url_launcher_web.dart",
    "package:url_launcher/src/types.dart",
    "package:url_launcher_platform_interface/link.dart",
    "package:url_launcher_web/src/link.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_web-2.0.19/lib/src/link.dart",
    "package:url_launcher_platform_interface/src/types.dart",
    "package:url_launcher_platform_interface/method_channel_url_launcher.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Лабораторная работа 4", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.green}), home: C[1] || CT.C1});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.HomeScreen = class HomeScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.HomeScreen.new({key: key});
    }
    createState() {
      return new main._HomeScreenState.new();
    }
  };
  (main.HomeScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.HomeScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.HomeScreen.prototype;
  dart.addTypeTests(main.HomeScreen);
  dart.addTypeCaches(main.HomeScreen);
  dart.setMethodSignature(main.HomeScreen, () => ({
    __proto__: dart.getMethods(main.HomeScreen.__proto__),
    createState: dart.fnType(main._HomeScreenState, [])
  }));
  dart.setLibraryUri(main.HomeScreen, I[0]);
  var _likesCount = dart.privateName(main, "_likesCount");
  var _isLiked = dart.privateName(main, "_isLiked");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var SnackBar_clipBehavior = dart.privateName(snack_bar, "SnackBar.clipBehavior");
  var SnackBar_dismissDirection = dart.privateName(snack_bar, "SnackBar.dismissDirection");
  var SnackBar_onVisible = dart.privateName(snack_bar, "SnackBar.onVisible");
  var SnackBar_animation = dart.privateName(snack_bar, "SnackBar.animation");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var SnackBar_duration = dart.privateName(snack_bar, "SnackBar.duration");
  var SnackBar_closeIconColor = dart.privateName(snack_bar, "SnackBar.closeIconColor");
  var SnackBar_showCloseIcon = dart.privateName(snack_bar, "SnackBar.showCloseIcon");
  var SnackBar_action = dart.privateName(snack_bar, "SnackBar.action");
  var SnackBar_behavior = dart.privateName(snack_bar, "SnackBar.behavior");
  var SnackBar_shape = dart.privateName(snack_bar, "SnackBar.shape");
  var SnackBar_width = dart.privateName(snack_bar, "SnackBar.width");
  var SnackBar_padding = dart.privateName(snack_bar, "SnackBar.padding");
  var SnackBar_margin = dart.privateName(snack_bar, "SnackBar.margin");
  var SnackBar_elevation = dart.privateName(snack_bar, "SnackBar.elevation");
  var SnackBar_backgroundColor = dart.privateName(snack_bar, "SnackBar.backgroundColor");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var SnackBar_content = dart.privateName(snack_bar, "SnackBar.content");
  var _toggleLike = dart.privateName(main, "_toggleLike");
  var _launchURL = dart.privateName(main, "_launchURL");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var ProgressIndicator_semanticsValue = dart.privateName(progress_indicator, "ProgressIndicator.semanticsValue");
  var ProgressIndicator_semanticsLabel = dart.privateName(progress_indicator, "ProgressIndicator.semanticsLabel");
  var ProgressIndicator_valueColor = dart.privateName(progress_indicator, "ProgressIndicator.valueColor");
  var ProgressIndicator_color = dart.privateName(progress_indicator, "ProgressIndicator.color");
  var ProgressIndicator_backgroundColor = dart.privateName(progress_indicator, "ProgressIndicator.backgroundColor");
  var ProgressIndicator_value = dart.privateName(progress_indicator, "ProgressIndicator.value");
  var CircularProgressIndicator_strokeWidth = dart.privateName(progress_indicator, "CircularProgressIndicator.strokeWidth");
  var CircularProgressIndicator__indicatorType = dart.privateName(progress_indicator, "CircularProgressIndicator._indicatorType");
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  main._HomeScreenState = class _HomeScreenState extends framework.State$(main.HomeScreen) {
    [_toggleLike]() {
      this.setState(dart.fn(() => {
        if (!this[_isLiked]) {
          this[_likesCount] = this[_likesCount] + 1;
          this[_isLiked] = true;
        } else {
          scaffold.ScaffoldMessenger.of(this.context).showSnackBar(C[2] || CT.C2);
        }
      }, T.VoidTovoid()));
    }
    [_launchURL](url) {
      return async.async(dart.void, function* _launchURL() {
        if (yield legacy_api.canLaunch(url)) {
          yield legacy_api.launch(url);
        } else {
          dart.throw("Не удается открыть ссылку " + url);
        }
      });
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[7] || CT.C7}), body: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Padding.new({padding: C[8] || CT.C8, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[9] || CT.C9, new image.Image.network("https://sun9-40.userapi.com/s/v1/ig2/m8wRvQ70t4diy--ngylsjzqPH0Q0zKd_zXn2MDsAG7jW6_HqWtmFZS9vQ-jA2h6Ybe842VvvBt7WkXUWPvdXymqG.jpg?quality=95&as=32x23,48x34,72x51,108x77,160x114,240x171,360x257,480x343,540x385,640x457,720x514,1080x771,1280x913,1435x1024&from=bu&u=vkdmz6YeWjWtphWD_EJyCAmvnI8spNDZd83OvRNVUpU&cs=604x431", {width: 1 / 0, height: 600, fit: box_fit.BoxFit.cover, loadingBuilder: dart.fn((context, child, loadingProgress) => {
                    if (loadingProgress == null) return child;
                    return C[10] || CT.C10;
                  }, T.BuildContextAndWidgetAndImageChunkEventNToWidget()), errorBuilder: dart.fn((context, error, stackTrace) => C[14] || CT.C14, T.BuildContextAndObjectAndStackTraceNToCenter())}), C[9] || CT.C9, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.start, children: T.JSArrayOfWidget().of([C[16] || CT.C16, C[19] || CT.C19, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.end, children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[20] || CT.C20, onPressed: dart.bind(this, _toggleLike)}), new text.Text.new(dart.str(this[_likesCount]), {style: C[34] || CT.C34})])})])}), C[35] || CT.C35, C[36] || CT.C36, C[9] || CT.C9, C[9] || CT.C9, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T.JSArrayOfWidget().of([new basic.Column.new({children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[52] || CT.C52, onPressed: dart.fn(() => {
                            this[_launchURL]("https://rutube.ru/video/f3b615db135287a64584737e664e1e4b/?ysclid=m84pnmcc7d542664246&utm_referrer=https%3A%2F%2Fyandex.ru%2F");
                          }, T.VoidTovoid())}), C[66] || CT.C66])}), new basic.Column.new({children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[68] || CT.C68, onPressed: dart.fn(() => {
                            this[_launchURL]("https://rutube.ru/video/f3b615db135287a64584737e664e1e4b/?ysclid=m84pnmcc7d542664246&utm_referrer=https%3A%2F%2Fyandex.ru%2F");
                          }, T.VoidTovoid())}), C[70] || CT.C70])}), new basic.Column.new({children: T.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[71] || CT.C71, onPressed: dart.fn(() => {
                            this[_launchURL]("https://rutube.ru/video/f3b615db135287a64584737e664e1e4b/?ysclid=m84pnmcc7d542664246&utm_referrer=https%3A%2F%2Fyandex.ru%2F");
                          }, T.VoidTovoid())}), C[73] || CT.C73])})])}), C[9] || CT.C9, C[74] || CT.C74])})})})});
    }
    static ['_#new#tearOff']() {
      return new main._HomeScreenState.new();
    }
  };
  (main._HomeScreenState.new = function() {
    this[_likesCount] = 0;
    this[_isLiked] = false;
    main._HomeScreenState.__proto__.new.call(this);
    ;
  }).prototype = main._HomeScreenState.prototype;
  dart.addTypeTests(main._HomeScreenState);
  dart.addTypeCaches(main._HomeScreenState);
  dart.setMethodSignature(main._HomeScreenState, () => ({
    __proto__: dart.getMethods(main._HomeScreenState.__proto__),
    [_toggleLike]: dart.fnType(dart.void, []),
    [_launchURL]: dart.fnType(async.Future$(dart.void), [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._HomeScreenState, I[0]);
  dart.setFieldSignature(main._HomeScreenState, () => ({
    __proto__: dart.getFields(main._HomeScreenState.__proto__),
    [_likesCount]: dart.fieldType(core.int),
    [_isLiked]: dart.fieldType(core.bool)
  }));
  main.main = function main$0() {
    binding.runApp(C[76] || CT.C76);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t0;
    let registrar = (t0 = pluginRegistrar, t0 == null ? plugin_registry.webPluginRegistrar : t0);
    url_launcher_web.UrlLauncherPlugin.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  var _isSafari = dart.privateName(url_launcher_web, "_isSafari");
  var _window = dart.privateName(url_launcher_web, "_window");
  plugin_platform_interface.PlatformInterface = class PlatformInterface extends core.Object {
    static verify(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: true});
    }
    static verifyToken(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: false});
    }
    static _verify(instance, token, opts) {
      let preventConstObject = opts && 'preventConstObject' in opts ? opts.preventConstObject : null;
      if (plugin_platform_interface.MockPlatformInterfaceMixin.is(instance)) {
        let assertionsEnabled = false;
        if (!dart.fn(() => {
          assertionsEnabled = true;
          return true;
        }, T.VoidTobool())()) dart.assertFailed(null, I[1], 92, 14, "() {\n        assertionsEnabled = true;\n        return true;\n      }()");
        if (!assertionsEnabled) {
          dart.throw(new core.AssertionError.new("`MockPlatformInterfaceMixin` is not intended for use in release builds."));
        }
        return;
      }
      if (preventConstObject && plugin_platform_interface.PlatformInterface._instanceTokens._get(instance) === (C[78] || CT.C78)) {
        dart.throw(new core.AssertionError.new("`const Object()` cannot be used as the token."));
      }
      if (token !== plugin_platform_interface.PlatformInterface._instanceTokens._get(instance)) {
        dart.throw(new core.AssertionError.new("Platform interfaces must not be implemented with `implements`"));
      }
    }
  };
  (plugin_platform_interface.PlatformInterface.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    plugin_platform_interface.PlatformInterface._instanceTokens._set(this, token);
  }).prototype = plugin_platform_interface.PlatformInterface.prototype;
  dart.addTypeTests(plugin_platform_interface.PlatformInterface);
  dart.addTypeCaches(plugin_platform_interface.PlatformInterface);
  dart.setStaticMethodSignature(plugin_platform_interface.PlatformInterface, () => ['verify', 'verifyToken', '_verify']);
  dart.setLibraryUri(plugin_platform_interface.PlatformInterface, I[2]);
  dart.setStaticFieldSignature(plugin_platform_interface.PlatformInterface, () => ['_instanceTokens']);
  dart.defineLazy(plugin_platform_interface.PlatformInterface, {
    /*plugin_platform_interface.PlatformInterface._instanceTokens*/get _instanceTokens() {
      return new (T.ExpandoOfObject()).new();
    }
  }, false);
  url_launcher_platform.UrlLauncherPlatform = class UrlLauncherPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return url_launcher_platform.UrlLauncherPlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, url_launcher_platform.UrlLauncherPlatform._token);
      url_launcher_platform.UrlLauncherPlatform._instance = instance;
    }
    canLaunch(url) {
      dart.throw(new core.UnimplementedError.new("canLaunch() has not been implemented."));
    }
    launch(url, opts) {
      let useSafariVC = opts && 'useSafariVC' in opts ? opts.useSafariVC : null;
      let useWebView = opts && 'useWebView' in opts ? opts.useWebView : null;
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : null;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : null;
      let universalLinksOnly = opts && 'universalLinksOnly' in opts ? opts.universalLinksOnly : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      dart.throw(new core.UnimplementedError.new("launch() has not been implemented."));
    }
    launchUrl(url, options) {
      let isWebURL = url[$startsWith]("http:") || url[$startsWith]("https:");
      let useWebView = options.mode === types$.PreferredLaunchMode.inAppWebView || options.mode === types$.PreferredLaunchMode.inAppBrowserView || isWebURL && options.mode === types$.PreferredLaunchMode.platformDefault;
      return this.launch(url, {useSafariVC: useWebView, useWebView: useWebView, enableJavaScript: options.webViewConfiguration.enableJavaScript, enableDomStorage: options.webViewConfiguration.enableDomStorage, universalLinksOnly: options.mode === types$.PreferredLaunchMode.externalNonBrowserApplication, headers: options.webViewConfiguration.headers, webOnlyWindowName: options.webOnlyWindowName});
    }
    closeWebView() {
      dart.throw(new core.UnimplementedError.new("closeWebView() has not been implemented."));
    }
    supportsMode(mode) {
      return T.FutureOfbool().value(mode === types$.PreferredLaunchMode.platformDefault);
    }
    supportsCloseForMode(mode) {
      return T.FutureOfbool().value(mode === types$.PreferredLaunchMode.inAppWebView);
    }
  };
  (url_launcher_platform.UrlLauncherPlatform.new = function() {
    url_launcher_platform.UrlLauncherPlatform.__proto__.new.call(this, {token: url_launcher_platform.UrlLauncherPlatform._token});
    ;
  }).prototype = url_launcher_platform.UrlLauncherPlatform.prototype;
  dart.addTypeTests(url_launcher_platform.UrlLauncherPlatform);
  dart.addTypeCaches(url_launcher_platform.UrlLauncherPlatform);
  dart.setMethodSignature(url_launcher_platform.UrlLauncherPlatform, () => ({
    __proto__: dart.getMethods(url_launcher_platform.UrlLauncherPlatform.__proto__),
    canLaunch: dart.fnType(async.Future$(core.bool), [core.String]),
    launch: dart.fnType(async.Future$(core.bool), [core.String], {webOnlyWindowName: dart.nullable(core.String)}, {enableDomStorage: core.bool, enableJavaScript: core.bool, headers: core.Map$(core.String, core.String), universalLinksOnly: core.bool, useSafariVC: core.bool, useWebView: core.bool}),
    launchUrl: dart.fnType(async.Future$(core.bool), [core.String, types$.LaunchOptions]),
    closeWebView: dart.fnType(async.Future$(dart.void), []),
    supportsMode: dart.fnType(async.Future$(core.bool), [types$.PreferredLaunchMode]),
    supportsCloseForMode: dart.fnType(async.Future$(core.bool), [types$.PreferredLaunchMode])
  }));
  dart.setStaticGetterSignature(url_launcher_platform.UrlLauncherPlatform, () => ['instance']);
  dart.setStaticSetterSignature(url_launcher_platform.UrlLauncherPlatform, () => ['instance']);
  dart.setLibraryUri(url_launcher_platform.UrlLauncherPlatform, I[3]);
  dart.setStaticFieldSignature(url_launcher_platform.UrlLauncherPlatform, () => ['_token', '_instance']);
  dart.defineLazy(url_launcher_platform.UrlLauncherPlatform, {
    /*url_launcher_platform.UrlLauncherPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*url_launcher_platform.UrlLauncherPlatform._instance*/get _instance() {
      return new method_channel_url_launcher.MethodChannelUrlLauncher.new();
    },
    set _instance(value) {}
  }, false);
  url_launcher_web.UrlLauncherPlugin = class UrlLauncherPlugin extends url_launcher_platform.UrlLauncherPlatform {
    static ['_#new#tearOff'](opts) {
      let debugWindow = opts && 'debugWindow' in opts ? opts.debugWindow : null;
      return new url_launcher_web.UrlLauncherPlugin.new({debugWindow: debugWindow});
    }
    static registerWith(registrar) {
      url_launcher_platform.UrlLauncherPlatform.instance = new url_launcher_web.UrlLauncherPlugin.new();
      ui.platformViewRegistry.registerViewFactory("__url_launcher::link", link$.linkViewFactory, {isVisible: false});
    }
    get linkDelegate() {
      return dart.fn(linkInfo => new link$.WebLinkDelegate.new(linkInfo), T.LinkInfoToWebLinkDelegate());
    }
    openNewWindow(url, opts) {
      let t0;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      let target = (t0 = webOnlyWindowName, t0 == null ? this[_isSafari] && url_launcher_web._isSafariTargetTopScheme(url) ? "_top" : "" : t0);
      return this[_window][$open](url, target);
    }
    canLaunch(url) {
      return T.FutureOfbool().value(url_launcher_web.UrlLauncherPlugin._supportedSchemes.contains(url_launcher_web._getUrlScheme(url)));
    }
    launch(url, opts) {
      let useSafariVC = opts && 'useSafariVC' in opts ? opts.useSafariVC : false;
      let useWebView = opts && 'useWebView' in opts ? opts.useWebView : false;
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : false;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : false;
      let universalLinksOnly = opts && 'universalLinksOnly' in opts ? opts.universalLinksOnly : false;
      let headers = opts && 'headers' in opts ? opts.headers : C[77] || CT.C77;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      return async.async(core.bool, (function* launch() {
        this.openNewWindow(url, {webOnlyWindowName: webOnlyWindowName});
        return true;
      }).bind(this));
    }
  };
  (url_launcher_web.UrlLauncherPlugin.new = function(opts) {
    let t0;
    let debugWindow = opts && 'debugWindow' in opts ? opts.debugWindow : null;
    this[_isSafari] = false;
    this[_window] = (t0 = debugWindow, t0 == null ? html.window : t0);
    url_launcher_web.UrlLauncherPlugin.__proto__.new.call(this);
    this[_isSafari] = url_launcher_web._navigatorIsSafari(this[_window][$navigator]);
  }).prototype = url_launcher_web.UrlLauncherPlugin.prototype;
  dart.addTypeTests(url_launcher_web.UrlLauncherPlugin);
  dart.addTypeCaches(url_launcher_web.UrlLauncherPlugin);
  dart.setMethodSignature(url_launcher_web.UrlLauncherPlugin, () => ({
    __proto__: dart.getMethods(url_launcher_web.UrlLauncherPlugin.__proto__),
    openNewWindow: dart.fnType(html.WindowBase, [core.String], {webOnlyWindowName: dart.nullable(core.String)}, {}),
    launch: dart.fnType(async.Future$(core.bool), [core.String], {enableDomStorage: core.bool, enableJavaScript: core.bool, headers: core.Map$(core.String, core.String), universalLinksOnly: core.bool, useSafariVC: core.bool, useWebView: core.bool, webOnlyWindowName: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(url_launcher_web.UrlLauncherPlugin, () => ['registerWith']);
  dart.setGetterSignature(url_launcher_web.UrlLauncherPlugin, () => ({
    __proto__: dart.getGetters(url_launcher_web.UrlLauncherPlugin.__proto__),
    linkDelegate: dart.fnType(framework.Widget, [link.LinkInfo])
  }));
  dart.setLibraryUri(url_launcher_web.UrlLauncherPlugin, I[4]);
  dart.setFieldSignature(url_launcher_web.UrlLauncherPlugin, () => ({
    __proto__: dart.getFields(url_launcher_web.UrlLauncherPlugin.__proto__),
    [_window]: dart.finalFieldType(html.Window),
    [_isSafari]: dart.fieldType(core.bool)
  }));
  dart.setStaticFieldSignature(url_launcher_web.UrlLauncherPlugin, () => ['_supportedSchemes']);
  dart.defineLazy(url_launcher_web.UrlLauncherPlugin, {
    /*url_launcher_web.UrlLauncherPlugin._supportedSchemes*/get _supportedSchemes() {
      return T.LinkedHashSetOfString().from(["http", "https"]).union(url_launcher_web._safariTargetTopSchemes);
    }
  }, false);
  url_launcher_web._getUrlScheme = function _getUrlScheme(url) {
    let t0;
    t0 = core.Uri.tryParse(url);
    return t0 == null ? null : t0.scheme;
  };
  url_launcher_web._isSafariTargetTopScheme = function _isSafariTargetTopScheme(url) {
    return url_launcher_web._safariTargetTopSchemes.contains(url_launcher_web._getUrlScheme(url));
  };
  url_launcher_web._navigatorIsSafari = function _navigatorIsSafari(navigator) {
    return navigator[$userAgent][$contains]("Safari") && !navigator[$userAgent][$contains]("Chrome");
  };
  dart.defineLazy(url_launcher_web, {
    /*url_launcher_web._safariTargetTopSchemes*/get _safariTargetTopSchemes() {
      return C[79] || CT.C79;
    }
  }, false);
  legacy_api.launch = function launch(urlString, opts) {
    let forceSafariVC = opts && 'forceSafariVC' in opts ? opts.forceSafariVC : null;
    let forceWebView = opts && 'forceWebView' in opts ? opts.forceWebView : false;
    let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : false;
    let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : false;
    let universalLinksOnly = opts && 'universalLinksOnly' in opts ? opts.universalLinksOnly : false;
    let headers = opts && 'headers' in opts ? opts.headers : C[77] || CT.C77;
    let statusBarBrightness = opts && 'statusBarBrightness' in opts ? opts.statusBarBrightness : null;
    let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
    return async.async(core.bool, function* launch() {
      let t0, t0$;
      let url = core.Uri.tryParse(urlString[$trimLeft]());
      let isWebURL = url != null && (url.scheme === "http" || url.scheme === "https");
      if (dart.test((t0 = forceSafariVC, t0 == null ? false || forceWebView : t0)) && !isWebURL) {
        dart.throw(new message_codec.PlatformException.new({code: "NOT_A_WEB_SCHEME", message: "To use webview or safariVC, you need to pass " + "in a web URL. This " + urlString + " is not a web URL."}));
      }
      let previousAutomaticSystemUiAdjustment = true;
      if (statusBarBrightness != null && platform.defaultTargetPlatform === platform.TargetPlatform.iOS && legacy_api._ambiguate(binding.WidgetsBinding, binding.WidgetsBinding.instance) != null) {
        previousAutomaticSystemUiAdjustment = dart.nullCheck(legacy_api._ambiguate(binding.WidgetsBinding, binding.WidgetsBinding.instance)).renderView.automaticSystemUiAdjustment;
        dart.nullCheck(legacy_api._ambiguate(binding.WidgetsBinding, binding.WidgetsBinding.instance)).renderView.automaticSystemUiAdjustment = false;
        system_chrome.SystemChrome.setSystemUIOverlayStyle(statusBarBrightness === ui.Brightness.light ? system_chrome.SystemUiOverlayStyle.dark : system_chrome.SystemUiOverlayStyle.light);
      }
      let result = (yield url_launcher_platform.UrlLauncherPlatform.instance.launch(urlString, {useSafariVC: (t0$ = forceSafariVC, t0$ == null ? isWebURL : t0$), useWebView: forceWebView, enableJavaScript: enableJavaScript, enableDomStorage: enableDomStorage, universalLinksOnly: universalLinksOnly, headers: headers, webOnlyWindowName: webOnlyWindowName}));
      if (statusBarBrightness != null && legacy_api._ambiguate(binding.WidgetsBinding, binding.WidgetsBinding.instance) != null) {
        dart.nullCheck(legacy_api._ambiguate(binding.WidgetsBinding, binding.WidgetsBinding.instance)).renderView.automaticSystemUiAdjustment = previousAutomaticSystemUiAdjustment;
      }
      return result;
    });
  };
  legacy_api.canLaunch = function canLaunch(urlString) {
    return async.async(core.bool, function* canLaunch() {
      return url_launcher_platform.UrlLauncherPlatform.instance.canLaunch(urlString);
    });
  };
  legacy_api.closeWebView = function closeWebView() {
    return async.async(dart.void, function* closeWebView() {
      return url_launcher_platform.UrlLauncherPlatform.instance.closeWebView();
    });
  };
  legacy_api._ambiguate = function _ambiguate(T, value) {
    return value;
  };
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  types.LaunchMode = class LaunchMode extends core._Enum {
    [_enumToString]() {
      return "LaunchMode." + this[_name];
    }
  };
  (types.LaunchMode.new = function(index, name) {
    types.LaunchMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = types.LaunchMode.prototype;
  dart.addTypeTests(types.LaunchMode);
  dart.addTypeCaches(types.LaunchMode);
  dart.setMethodSignature(types.LaunchMode, () => ({
    __proto__: dart.getMethods(types.LaunchMode.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(types.LaunchMode, I[5]);
  dart.setStaticFieldSignature(types.LaunchMode, () => ['values', 'platformDefault', 'inAppWebView', 'externalApplication', 'externalNonBrowserApplication']);
  dart.defineLazy(types.LaunchMode, {
    /*types.LaunchMode.values*/get values() {
      return C[80] || CT.C80;
    },
    /*types.LaunchMode.platformDefault*/get platformDefault() {
      return C[81] || CT.C81;
    },
    /*types.LaunchMode.inAppWebView*/get inAppWebView() {
      return C[82] || CT.C82;
    },
    /*types.LaunchMode.externalApplication*/get externalApplication() {
      return C[83] || CT.C83;
    },
    /*types.LaunchMode.externalNonBrowserApplication*/get externalNonBrowserApplication() {
      return C[84] || CT.C84;
    }
  }, false);
  var enableJavaScript$ = dart.privateName(types, "WebViewConfiguration.enableJavaScript");
  var enableDomStorage$ = dart.privateName(types, "WebViewConfiguration.enableDomStorage");
  var headers$ = dart.privateName(types, "WebViewConfiguration.headers");
  types.WebViewConfiguration = class WebViewConfiguration extends core.Object {
    get enableJavaScript() {
      return this[enableJavaScript$];
    }
    set enableJavaScript(value) {
      super.enableJavaScript = value;
    }
    get enableDomStorage() {
      return this[enableDomStorage$];
    }
    set enableDomStorage(value) {
      super.enableDomStorage = value;
    }
    get headers() {
      return this[headers$];
    }
    set headers(value) {
      super.headers = value;
    }
    static ['_#new#tearOff'](opts) {
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : true;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : true;
      let headers = opts && 'headers' in opts ? opts.headers : C[77] || CT.C77;
      return new types.WebViewConfiguration.new({enableJavaScript: enableJavaScript, enableDomStorage: enableDomStorage, headers: headers});
    }
  };
  (types.WebViewConfiguration.new = function(opts) {
    let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : true;
    let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : true;
    let headers = opts && 'headers' in opts ? opts.headers : C[77] || CT.C77;
    this[enableJavaScript$] = enableJavaScript;
    this[enableDomStorage$] = enableDomStorage;
    this[headers$] = headers;
    ;
  }).prototype = types.WebViewConfiguration.prototype;
  dart.addTypeTests(types.WebViewConfiguration);
  dart.addTypeCaches(types.WebViewConfiguration);
  dart.setLibraryUri(types.WebViewConfiguration, I[5]);
  dart.setFieldSignature(types.WebViewConfiguration, () => ({
    __proto__: dart.getFields(types.WebViewConfiguration.__proto__),
    enableJavaScript: dart.finalFieldType(core.bool),
    enableDomStorage: dart.finalFieldType(core.bool),
    headers: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  url_launcher_uri.launchUrl = function launchUrl(url, opts) {
    let mode = opts && 'mode' in opts ? opts.mode : C[81] || CT.C81;
    let webViewConfiguration = opts && 'webViewConfiguration' in opts ? opts.webViewConfiguration : C[85] || CT.C85;
    let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
    return async.async(core.bool, function* launchUrl() {
      if (mode === types.LaunchMode.inAppWebView && !(url.scheme === "https" || url.scheme === "http")) {
        dart.throw(new core.ArgumentError.value(url, "url", "To use an in-app web view, you must provide an http(s) URL."));
      }
      return url_launcher_platform.UrlLauncherPlatform.instance.launchUrl(url.toString(), new types$.LaunchOptions.new({mode: type_conversion.convertLaunchMode(mode), webViewConfiguration: type_conversion.convertConfiguration(webViewConfiguration), webOnlyWindowName: webOnlyWindowName}));
    });
  };
  url_launcher_uri.canLaunchUrl = function canLaunchUrl(url) {
    return async.async(core.bool, function* canLaunchUrl() {
      return url_launcher_platform.UrlLauncherPlatform.instance.canLaunch(url.toString());
    });
  };
  url_launcher_uri.closeInAppWebView = function closeInAppWebView() {
    return async.async(dart.void, function* closeInAppWebView() {
      return url_launcher_platform.UrlLauncherPlatform.instance.closeWebView();
    });
  };
  var debugLabel$ = dart.privateName(link, "LinkTarget.debugLabel");
  link.LinkTarget = class LinkTarget extends core.Object {
    get debugLabel() {
      return this[debugLabel$];
    }
    set debugLabel(value) {
      super.debugLabel = value;
    }
    static ['_#_#tearOff'](opts) {
      let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
      return new link.LinkTarget.__({debugLabel: debugLabel});
    }
  };
  (link.LinkTarget.__ = function(opts) {
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    this[debugLabel$] = debugLabel;
    ;
  }).prototype = link.LinkTarget.prototype;
  dart.addTypeTests(link.LinkTarget);
  dart.addTypeCaches(link.LinkTarget);
  dart.setLibraryUri(link.LinkTarget, I[6]);
  dart.setFieldSignature(link.LinkTarget, () => ({
    __proto__: dart.getFields(link.LinkTarget.__proto__),
    debugLabel: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(link.LinkTarget, () => ['defaultTarget', 'self', 'blank']);
  dart.defineLazy(link.LinkTarget, {
    /*link.LinkTarget.defaultTarget*/get defaultTarget() {
      return C[86] || CT.C86;
    },
    /*link.LinkTarget.self*/get self() {
      return C[87] || CT.C87;
    },
    /*link.LinkTarget.blank*/get blank() {
      return C[88] || CT.C88;
    }
  }, false);
  link.LinkInfo = class LinkInfo extends core.Object {};
  (link.LinkInfo.new = function() {
    ;
  }).prototype = link.LinkInfo.prototype;
  dart.addTypeTests(link.LinkInfo);
  dart.addTypeCaches(link.LinkInfo);
  dart.setLibraryUri(link.LinkInfo, I[6]);
  link.pushRouteNameToFramework = function pushRouteNameToFramework(_, routeName) {
    let completer = T.CompleterOfByteData().new();
    system_navigator.SystemNavigator.routeInformationUpdated({location: routeName});
    ui.channelBuffers.push("flutter/navigation", link._codec.encodeMethodCall(new message_codec.MethodCall.new("pushRouteInformation", new _js_helper.LinkedMap.from(["location", routeName, "state", null]))), T.FutureOrNOfByteDataTovoid().as(dart.bind(completer, 'complete')));
    return completer.future;
  };
  dart.defineLazy(link, {
    /*link._codec*/get _codec() {
      return C[89] || CT.C89;
    }
  }, false);
  var link$0 = dart.privateName(link$, "WebLinkDelegate.link");
  link$.WebLinkDelegate = class WebLinkDelegate extends framework.StatefulWidget {
    get link() {
      return this[link$0];
    }
    set link(value) {
      super.link = value;
    }
    static ['_#new#tearOff'](link, opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new link$.WebLinkDelegate.new(link, {key: key});
    }
    createState() {
      return new link$.WebLinkDelegateState.new();
    }
  };
  (link$.WebLinkDelegate.new = function(link, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    this[link$0] = link;
    link$.WebLinkDelegate.__proto__.new.call(this, {key: key});
    ;
  }).prototype = link$.WebLinkDelegate.prototype;
  dart.addTypeTests(link$.WebLinkDelegate);
  dart.addTypeCaches(link$.WebLinkDelegate);
  dart.setMethodSignature(link$.WebLinkDelegate, () => ({
    __proto__: dart.getMethods(link$.WebLinkDelegate.__proto__),
    createState: dart.fnType(link$.WebLinkDelegateState, [])
  }));
  dart.setLibraryUri(link$.WebLinkDelegate, I[7]);
  dart.setFieldSignature(link$.WebLinkDelegate, () => ({
    __proto__: dart.getFields(link$.WebLinkDelegate.__proto__),
    link: dart.finalFieldType(link.LinkInfo)
  }));
  var __WebLinkDelegateState__controller = dart.privateName(link$, "_#WebLinkDelegateState#_controller");
  var _controller = dart.privateName(link$, "_controller");
  var _followLink = dart.privateName(link$, "_followLink");
  link$.WebLinkDelegateState = class WebLinkDelegateState extends framework.State$(link$.WebLinkDelegate) {
    get [_controller]() {
      let t2;
      t2 = this[__WebLinkDelegateState__controller];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t2;
    }
    set [_controller](_controller$35param) {
      this[__WebLinkDelegateState__controller] = _controller$35param;
    }
    didUpdateWidget(oldWidget) {
      link$.WebLinkDelegate.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.link.uri, oldWidget.link.uri)) {
        this[_controller].setUri(this.widget.link.uri);
      }
      if (!this.widget.link.target[$_equals](oldWidget.link.target)) {
        this[_controller].setTarget(this.widget.link.target);
      }
    }
    [_followLink]() {
      link$.LinkViewController.registerHitTest(this[_controller]);
      return T.FutureOfvoid().value();
    }
    build(context) {
      let t4, t3, t2;
      return new basic.Stack.new({fit: stack.StackFit.passthrough, children: T.JSArrayOfWidget().of([(t2 = this.widget.link, t3 = context, t4 = this.widget.link.isDisabled ? null : dart.bind(this, _followLink), t2.builder(t3, t4)), new basic.Positioned.fill({child: new platform_view.PlatformViewLink.new({viewType: "__url_launcher::link", onCreatePlatformView: dart.fn(params => {
                let t2;
                this[_controller] = link$.LinkViewController.fromParams(params);
                t2 = this[_controller];
                return (() => {
                  t2.setUri(this.widget.link.uri);
                  t2.setTarget(this.widget.link.target);
                  return t2;
                })();
              }, T.PlatformViewCreationParamsToLinkViewController()), surfaceFactory: dart.fn((context, controller) => new platform_view.PlatformViewSurface.new({controller: controller, gestureRecognizers: C[90] || CT.C90, hitTestBehavior: platform_view$.PlatformViewHitTestBehavior.transparent}), T.BuildContextAndPlatformViewControllerToPlatformViewSurface())})})])});
    }
    static ['_#new#tearOff']() {
      return new link$.WebLinkDelegateState.new();
    }
  };
  (link$.WebLinkDelegateState.new = function() {
    this[__WebLinkDelegateState__controller] = null;
    link$.WebLinkDelegateState.__proto__.new.call(this);
    ;
  }).prototype = link$.WebLinkDelegateState.prototype;
  dart.addTypeTests(link$.WebLinkDelegateState);
  dart.addTypeCaches(link$.WebLinkDelegateState);
  dart.setMethodSignature(link$.WebLinkDelegateState, () => ({
    __proto__: dart.getMethods(link$.WebLinkDelegateState.__proto__),
    [_followLink]: dart.fnType(async.Future$(dart.void), []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(link$.WebLinkDelegateState, () => ({
    __proto__: dart.getGetters(link$.WebLinkDelegateState.__proto__),
    [_controller]: link$.LinkViewController
  }));
  dart.setSetterSignature(link$.WebLinkDelegateState, () => ({
    __proto__: dart.getSetters(link$.WebLinkDelegateState.__proto__),
    [_controller]: link$.LinkViewController
  }));
  dart.setLibraryUri(link$.WebLinkDelegateState, I[7]);
  dart.setFieldSignature(link$.WebLinkDelegateState, () => ({
    __proto__: dart.getFields(link$.WebLinkDelegateState.__proto__),
    [__WebLinkDelegateState__controller]: dart.fieldType(dart.nullable(link$.LinkViewController))
  }));
  var viewId$ = dart.privateName(link$, "LinkViewController.viewId");
  var __LinkViewController__element = dart.privateName(link$, "_#LinkViewController#_element");
  var _uri = dart.privateName(link$, "_uri");
  var _initialize = dart.privateName(link$, "_initialize");
  var _element = dart.privateName(link$, "_element");
  var _onDomClick = dart.privateName(link$, "_onDomClick");
  var _getHtmlTarget = dart.privateName(link$, "_getHtmlTarget");
  link$.LinkViewController = class LinkViewController extends platform_views.PlatformViewController {
    get viewId() {
      return this[viewId$];
    }
    set viewId(value) {
      super.viewId = value;
    }
    static ['_#new#tearOff'](viewId) {
      return new link$.LinkViewController.new(viewId);
    }
    static fromParams(params) {
      let viewId = params.id;
      let controller = new link$.LinkViewController.new(viewId);
      controller[_initialize]().then(core.Null, dart.fn(_ => {
        let t3, t2;
        if (dart.equals(link$.LinkViewController._instances[$_get](viewId), controller)) {
          t2 = params;
          t3 = viewId;
          t2.onPlatformViewCreated(t3);
        }
      }, T.voidToNull()));
      return controller;
    }
    static ['_#fromParams#tearOff'](params) {
      return link$.LinkViewController.fromParams(params);
    }
    static _viewFactory(viewId) {
      return dart.nullCheck(link$.LinkViewController._instances[$_get](viewId))[_element];
    }
    static get _clickSubscription() {
      let t2;
      t2 = link$.LinkViewController['_#_clickSubscription'];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_clickSubscription")) : t2;
    }
    static set _clickSubscription(_clickSubscription$35param) {
      link$.LinkViewController['_#_clickSubscription'] = _clickSubscription$35param;
    }
    static _onGlobalClick(event) {
      let t2;
      let viewId = link$.getViewIdFromTarget(event);
      t2 = link$.LinkViewController._instances[$_get](viewId);
      t2 == null ? null : t2[_onDomClick](event);
      link$.LinkViewController.unregisterHitTest();
    }
    static registerHitTest(controller) {
      link$.LinkViewController._hitTestedViewId = controller.viewId;
    }
    static unregisterHitTest() {
      link$.LinkViewController._hitTestedViewId = null;
    }
    get [_element]() {
      let t2;
      t2 = this[__LinkViewController__element];
      return t2 == null ? dart.throw(new _internal.LateError.fieldNI("_element")) : t2;
    }
    set [_element](_element$35param) {
      this[__LinkViewController__element] = _element$35param;
    }
    [_initialize]() {
      return async.async(dart.void, (function* _initialize() {
        let t2;
        this[_element] = html.Element.tag("a");
        js_util._setPropertyUnchecked(core.int, this[_element], "__url_launcher::link::viewId", this.viewId);
        t2 = this[_element][$style];
        (() => {
          t2[$opacity] = "0";
          t2[$display] = "block";
          t2[$width] = "100%";
          t2[$height] = "100%";
          t2[$cursor] = "unset";
          return t2;
        })();
        this[_element][$setAttribute]("rel", "noreferrer noopener");
        let args = new (T.IdentityMapOfString$dynamic()).from(["id", this.viewId, "viewType", "__url_launcher::link"]);
        yield system_channels.SystemChannels.platform_views.invokeMethod(dart.void, "create", args);
      }).bind(this));
    }
    [_onDomClick](event) {
      let isHitTested = link$.LinkViewController._hitTestedViewId === this.viewId;
      if (!isHitTested) {
        event.preventDefault();
        return;
      }
      if (this[_uri] != null && dart.nullCheck(this[_uri]).hasScheme) {
        return;
      }
      event.preventDefault();
      let routeName = dart.toString(this[_uri]);
      link.pushRouteNameToFramework(null, routeName);
    }
    setUri(uri) {
      let t2, t2$;
      this[_uri] = uri;
      if (uri == null) {
        this[_element][$removeAttribute]("href");
      } else {
        let href = dart.toString(uri);
        if (!uri.hasScheme) {
          href = (t2$ = (t2 = url_strategy.urlStrategy, t2 == null ? null : t2.prepareExternalUrl(href)), t2$ == null ? href : t2$);
        }
        this[_element][$setAttribute]("href", href);
      }
    }
    setTarget(target) {
      this[_element][$setAttribute]("target", this[_getHtmlTarget](target));
    }
    [_getHtmlTarget](target) {
      switch (target) {
        case C[86] || CT.C86:
        case C[87] || CT.C87:
          {
            return "_self";
          }
        case C[88] || CT.C88:
          {
            return "_blank";
          }
      }
      return "_self";
    }
    clearFocus() {
      return async.async(dart.void, function* clearFocus() {
      });
    }
    dispatchPointerEvent(event) {
      return async.async(dart.void, function* dispatchPointerEvent() {
      });
    }
    dispose() {
      return async.async(dart.void, (function* dispose() {
        if (!dart.equals(link$.LinkViewController._instances[$_get](this.viewId), this)) dart.assertFailed(null, I[8], 269, 12, "_instances[viewId] == this");
        link$.LinkViewController._instances[$remove](this.viewId);
        if (link$.LinkViewController._instances[$isEmpty]) {
          yield link$.LinkViewController._clickSubscription.cancel();
        }
        yield system_channels.SystemChannels.platform_views.invokeMethod(dart.void, "dispose", this.viewId);
      }).bind(this));
    }
  };
  (link$.LinkViewController.new = function(viewId) {
    this[__LinkViewController__element] = null;
    this[_uri] = null;
    this[viewId$] = viewId;
    if (link$.LinkViewController._instances[$isEmpty]) {
      link$.LinkViewController._clickSubscription = html.window[$onClick].listen(C[91] || CT.C91);
    }
    link$.LinkViewController._instances[$_set](this.viewId, this);
  }).prototype = link$.LinkViewController.prototype;
  dart.addTypeTests(link$.LinkViewController);
  dart.addTypeCaches(link$.LinkViewController);
  dart.setMethodSignature(link$.LinkViewController, () => ({
    __proto__: dart.getMethods(link$.LinkViewController.__proto__),
    [_initialize]: dart.fnType(async.Future$(dart.void), []),
    [_onDomClick]: dart.fnType(dart.void, [html.MouseEvent]),
    setUri: dart.fnType(dart.void, [dart.nullable(core.Uri)]),
    setTarget: dart.fnType(dart.void, [link.LinkTarget]),
    [_getHtmlTarget]: dart.fnType(core.String, [link.LinkTarget]),
    clearFocus: dart.fnType(async.Future$(dart.void), []),
    dispatchPointerEvent: dart.fnType(async.Future$(dart.void), [events.PointerEvent]),
    dispose: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(link$.LinkViewController, () => ['fromParams', '_viewFactory', '_onGlobalClick', 'registerHitTest', 'unregisterHitTest']);
  dart.setGetterSignature(link$.LinkViewController, () => ({
    __proto__: dart.getGetters(link$.LinkViewController.__proto__),
    [_element]: html.Element
  }));
  dart.setSetterSignature(link$.LinkViewController, () => ({
    __proto__: dart.getSetters(link$.LinkViewController.__proto__),
    [_element]: html.Element
  }));
  dart.setStaticGetterSignature(link$.LinkViewController, () => ['_clickSubscription']);
  dart.setStaticSetterSignature(link$.LinkViewController, () => ['_clickSubscription']);
  dart.setLibraryUri(link$.LinkViewController, I[7]);
  dart.setFieldSignature(link$.LinkViewController, () => ({
    __proto__: dart.getFields(link$.LinkViewController.__proto__),
    viewId: dart.finalFieldType(core.int),
    [__LinkViewController__element]: dart.fieldType(dart.nullable(html.Element)),
    [_uri]: dart.fieldType(dart.nullable(core.Uri))
  }));
  dart.setStaticFieldSignature(link$.LinkViewController, () => ['_instances', '_hitTestedViewId', '_#_clickSubscription']);
  dart.defineLazy(link$.LinkViewController, {
    /*link$.LinkViewController._instances*/get _instances() {
      return new (T.IdentityMapOfint$LinkViewController()).new();
    },
    /*link$.LinkViewController._hitTestedViewId*/get _hitTestedViewId() {
      return null;
    },
    set _hitTestedViewId(value) {},
    /*link$.LinkViewController['_#_clickSubscription']*/get ['_#_clickSubscription']() {
      return null;
    },
    set ['_#_clickSubscription'](value) {}
  }, false);
  link$.getViewIdFromTarget = function getViewIdFromTarget(event) {
    let linkElement = link$.getLinkElementFromTarget(event);
    if (linkElement != null) {
      return js_util.getProperty(T.intN(), linkElement, "__url_launcher::link::viewId");
    }
    return null;
  };
  link$.getLinkElementFromTarget = function getLinkElementFromTarget(event) {
    let target = event[$target];
    if (target != null && html.Element.is(target)) {
      if (link$.isLinkElement(target)) {
        return target;
      }
      if (target[$shadowRoot] != null) {
        let child = dart.nullCheck(target[$shadowRoot]).lastChild;
        if (child != null && html.Element.is(child) && link$.isLinkElement(child)) {
          return child;
        }
      }
    }
    return null;
  };
  link$.isLinkElement = function isLinkElement(element) {
    return element != null && element[$tagName] === "A" && js_util.hasProperty(element, "__url_launcher::link::viewId");
  };
  dart.copyProperties(link$, {
    get linkViewFactory() {
      return C[92] || CT.C92;
    }
  });
  dart.defineLazy(link$, {
    /*link$.linkViewType*/get linkViewType() {
      return "__url_launcher::link";
    },
    /*link$.linkViewIdProperty*/get linkViewIdProperty() {
      return "__url_launcher::link::viewId";
    }
  }, false);
  type_conversion.convertConfiguration = function convertConfiguration(config) {
    return new types$.InAppWebViewConfiguration.new({enableJavaScript: config.enableJavaScript, enableDomStorage: config.enableDomStorage, headers: config.headers});
  };
  type_conversion.convertLaunchMode = function convertLaunchMode(mode) {
    switch (mode) {
      case C[81] || CT.C81:
        {
          return types$.PreferredLaunchMode.platformDefault;
        }
      case C[82] || CT.C82:
        {
          return types$.PreferredLaunchMode.inAppWebView;
        }
      case C[83] || CT.C83:
        {
          return types$.PreferredLaunchMode.externalApplication;
        }
      case C[84] || CT.C84:
        {
          return types$.PreferredLaunchMode.externalNonBrowserApplication;
        }
    }
  };
  types$.PreferredLaunchMode = class PreferredLaunchMode extends core._Enum {
    [_enumToString]() {
      return "PreferredLaunchMode." + this[_name];
    }
  };
  (types$.PreferredLaunchMode.new = function(index, name) {
    types$.PreferredLaunchMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = types$.PreferredLaunchMode.prototype;
  dart.addTypeTests(types$.PreferredLaunchMode);
  dart.addTypeCaches(types$.PreferredLaunchMode);
  dart.setMethodSignature(types$.PreferredLaunchMode, () => ({
    __proto__: dart.getMethods(types$.PreferredLaunchMode.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(types$.PreferredLaunchMode, I[9]);
  dart.setStaticFieldSignature(types$.PreferredLaunchMode, () => ['values', 'platformDefault', 'inAppWebView', 'inAppBrowserView', 'externalApplication', 'externalNonBrowserApplication']);
  dart.defineLazy(types$.PreferredLaunchMode, {
    /*types$.PreferredLaunchMode.values*/get values() {
      return C[93] || CT.C93;
    },
    /*types$.PreferredLaunchMode.platformDefault*/get platformDefault() {
      return C[94] || CT.C94;
    },
    /*types$.PreferredLaunchMode.inAppWebView*/get inAppWebView() {
      return C[95] || CT.C95;
    },
    /*types$.PreferredLaunchMode.inAppBrowserView*/get inAppBrowserView() {
      return C[96] || CT.C96;
    },
    /*types$.PreferredLaunchMode.externalApplication*/get externalApplication() {
      return C[97] || CT.C97;
    },
    /*types$.PreferredLaunchMode.externalNonBrowserApplication*/get externalNonBrowserApplication() {
      return C[98] || CT.C98;
    }
  }, false);
  var enableJavaScript$0 = dart.privateName(types$, "InAppWebViewConfiguration.enableJavaScript");
  var enableDomStorage$0 = dart.privateName(types$, "InAppWebViewConfiguration.enableDomStorage");
  var headers$0 = dart.privateName(types$, "InAppWebViewConfiguration.headers");
  types$.InAppWebViewConfiguration = class InAppWebViewConfiguration extends core.Object {
    get enableJavaScript() {
      return this[enableJavaScript$0];
    }
    set enableJavaScript(value) {
      super.enableJavaScript = value;
    }
    get enableDomStorage() {
      return this[enableDomStorage$0];
    }
    set enableDomStorage(value) {
      super.enableDomStorage = value;
    }
    get headers() {
      return this[headers$0];
    }
    set headers(value) {
      super.headers = value;
    }
    static ['_#new#tearOff'](opts) {
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : true;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : true;
      let headers = opts && 'headers' in opts ? opts.headers : C[77] || CT.C77;
      return new types$.InAppWebViewConfiguration.new({enableJavaScript: enableJavaScript, enableDomStorage: enableDomStorage, headers: headers});
    }
  };
  (types$.InAppWebViewConfiguration.new = function(opts) {
    let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : true;
    let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : true;
    let headers = opts && 'headers' in opts ? opts.headers : C[77] || CT.C77;
    this[enableJavaScript$0] = enableJavaScript;
    this[enableDomStorage$0] = enableDomStorage;
    this[headers$0] = headers;
    ;
  }).prototype = types$.InAppWebViewConfiguration.prototype;
  dart.addTypeTests(types$.InAppWebViewConfiguration);
  dart.addTypeCaches(types$.InAppWebViewConfiguration);
  dart.setLibraryUri(types$.InAppWebViewConfiguration, I[9]);
  dart.setFieldSignature(types$.InAppWebViewConfiguration, () => ({
    __proto__: dart.getFields(types$.InAppWebViewConfiguration.__proto__),
    enableJavaScript: dart.finalFieldType(core.bool),
    enableDomStorage: dart.finalFieldType(core.bool),
    headers: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  var mode$ = dart.privateName(types$, "LaunchOptions.mode");
  var webViewConfiguration$ = dart.privateName(types$, "LaunchOptions.webViewConfiguration");
  var webOnlyWindowName$ = dart.privateName(types$, "LaunchOptions.webOnlyWindowName");
  types$.LaunchOptions = class LaunchOptions extends core.Object {
    get mode() {
      return this[mode$];
    }
    set mode(value) {
      super.mode = value;
    }
    get webViewConfiguration() {
      return this[webViewConfiguration$];
    }
    set webViewConfiguration(value) {
      super.webViewConfiguration = value;
    }
    get webOnlyWindowName() {
      return this[webOnlyWindowName$];
    }
    set webOnlyWindowName(value) {
      super.webOnlyWindowName = value;
    }
    static ['_#new#tearOff'](opts) {
      let mode = opts && 'mode' in opts ? opts.mode : C[94] || CT.C94;
      let webViewConfiguration = opts && 'webViewConfiguration' in opts ? opts.webViewConfiguration : C[99] || CT.C99;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      return new types$.LaunchOptions.new({mode: mode, webViewConfiguration: webViewConfiguration, webOnlyWindowName: webOnlyWindowName});
    }
  };
  (types$.LaunchOptions.new = function(opts) {
    let mode = opts && 'mode' in opts ? opts.mode : C[94] || CT.C94;
    let webViewConfiguration = opts && 'webViewConfiguration' in opts ? opts.webViewConfiguration : C[99] || CT.C99;
    let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
    this[mode$] = mode;
    this[webViewConfiguration$] = webViewConfiguration;
    this[webOnlyWindowName$] = webOnlyWindowName;
    ;
  }).prototype = types$.LaunchOptions.prototype;
  dart.addTypeTests(types$.LaunchOptions);
  dart.addTypeCaches(types$.LaunchOptions);
  dart.setLibraryUri(types$.LaunchOptions, I[9]);
  dart.setFieldSignature(types$.LaunchOptions, () => ({
    __proto__: dart.getFields(types$.LaunchOptions.__proto__),
    mode: dart.finalFieldType(types$.PreferredLaunchMode),
    webViewConfiguration: dart.finalFieldType(types$.InAppWebViewConfiguration),
    webOnlyWindowName: dart.finalFieldType(dart.nullable(core.String))
  }));
  url_launcher_string$.launchUrlString = function launchUrlString(urlString, opts) {
    let mode = opts && 'mode' in opts ? opts.mode : C[81] || CT.C81;
    let webViewConfiguration = opts && 'webViewConfiguration' in opts ? opts.webViewConfiguration : C[85] || CT.C85;
    let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
    return async.async(core.bool, function* launchUrlString() {
      if (mode === types.LaunchMode.inAppWebView && !(urlString[$startsWith]("https:") || urlString[$startsWith]("http:"))) {
        dart.throw(new core.ArgumentError.value(urlString, "urlString", "To use an in-app web view, you must provide an http(s) URL."));
      }
      return url_launcher_platform.UrlLauncherPlatform.instance.launchUrl(urlString, new types$.LaunchOptions.new({mode: type_conversion.convertLaunchMode(mode), webViewConfiguration: type_conversion.convertConfiguration(webViewConfiguration), webOnlyWindowName: webOnlyWindowName}));
    });
  };
  url_launcher_string$.canLaunchUrlString = function canLaunchUrlString(urlString) {
    return async.async(core.bool, function* canLaunchUrlString() {
      return url_launcher_platform.UrlLauncherPlatform.instance.canLaunch(urlString);
    });
  };
  plugin_platform_interface.MockPlatformInterfaceMixin = class MockPlatformInterfaceMixin extends core.Object {};
  (plugin_platform_interface.MockPlatformInterfaceMixin.new = function() {
    ;
  }).prototype = plugin_platform_interface.MockPlatformInterfaceMixin.prototype;
  dart.addTypeTests(plugin_platform_interface.MockPlatformInterfaceMixin);
  dart.addTypeCaches(plugin_platform_interface.MockPlatformInterfaceMixin);
  plugin_platform_interface.MockPlatformInterfaceMixin[dart.implements] = () => [plugin_platform_interface.PlatformInterface];
  dart.setLibraryUri(plugin_platform_interface.MockPlatformInterfaceMixin, I[2]);
  var linkDelegate = dart.privateName(method_channel_url_launcher, "MethodChannelUrlLauncher.linkDelegate");
  method_channel_url_launcher.MethodChannelUrlLauncher = class MethodChannelUrlLauncher extends url_launcher_platform.UrlLauncherPlatform {
    get linkDelegate() {
      return this[linkDelegate];
    }
    set linkDelegate(value) {
      super.linkDelegate = value;
    }
    canLaunch(url) {
      return method_channel_url_launcher._channel.invokeMethod(core.bool, "canLaunch", new (T.IdentityMapOfString$Object()).from(["url", url])).then(core.bool, dart.fn(value => {
        let t4;
        t4 = value;
        return t4 == null ? false : t4;
      }, T.boolNTobool()));
    }
    closeWebView() {
      return method_channel_url_launcher._channel.invokeMethod(dart.void, "closeWebView");
    }
    launch(url, opts) {
      let useSafariVC = opts && 'useSafariVC' in opts ? opts.useSafariVC : null;
      let useWebView = opts && 'useWebView' in opts ? opts.useWebView : null;
      let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : null;
      let enableDomStorage = opts && 'enableDomStorage' in opts ? opts.enableDomStorage : null;
      let universalLinksOnly = opts && 'universalLinksOnly' in opts ? opts.universalLinksOnly : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let webOnlyWindowName = opts && 'webOnlyWindowName' in opts ? opts.webOnlyWindowName : null;
      return method_channel_url_launcher._channel.invokeMethod(core.bool, "launch", new (T.IdentityMapOfString$Object()).from(["url", url, "useSafariVC", useSafariVC, "useWebView", useWebView, "enableJavaScript", enableJavaScript, "enableDomStorage", enableDomStorage, "universalLinksOnly", universalLinksOnly, "headers", headers])).then(core.bool, dart.fn(value => {
        let t4;
        t4 = value;
        return t4 == null ? false : t4;
      }, T.boolNTobool()));
    }
    static ['_#new#tearOff']() {
      return new method_channel_url_launcher.MethodChannelUrlLauncher.new();
    }
  };
  (method_channel_url_launcher.MethodChannelUrlLauncher.new = function() {
    this[linkDelegate] = null;
    method_channel_url_launcher.MethodChannelUrlLauncher.__proto__.new.call(this);
    ;
  }).prototype = method_channel_url_launcher.MethodChannelUrlLauncher.prototype;
  dart.addTypeTests(method_channel_url_launcher.MethodChannelUrlLauncher);
  dart.addTypeCaches(method_channel_url_launcher.MethodChannelUrlLauncher);
  dart.setLibraryUri(method_channel_url_launcher.MethodChannelUrlLauncher, I[10]);
  dart.setFieldSignature(method_channel_url_launcher.MethodChannelUrlLauncher, () => ({
    __proto__: dart.getFields(method_channel_url_launcher.MethodChannelUrlLauncher.__proto__),
    linkDelegate: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [link.LinkInfo])))
  }));
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  dart.defineLazy(method_channel_url_launcher, {
    /*method_channel_url_launcher._channel*/get _channel() {
      return C[100] || CT.C100;
    }
  }, false);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:url_launcher/url_launcher.dart": url_launcher,
    "package:url_launcher_web/url_launcher_web.dart": url_launcher_web,
    "package:url_launcher/src/legacy_api.dart": legacy_api,
    "package:url_launcher/src/types.dart": types,
    "package:url_launcher/src/url_launcher_uri.dart": url_launcher_uri,
    "package:url_launcher_platform_interface/link.dart": link,
    "package:url_launcher_platform_interface/url_launcher_platform_interface.dart": url_launcher_platform_interface,
    "package:url_launcher_web/src/link.dart": link$,
    "package:url_launcher_web/src/shims/dart_ui.dart": dart_ui,
    "package:url_launcher/url_launcher_string.dart": url_launcher_string,
    "package:url_launcher/src/type_conversion.dart": type_conversion,
    "package:url_launcher_platform_interface/src/types.dart": types$,
    "package:url_launcher_platform_interface/src/url_launcher_platform.dart": url_launcher_platform,
    "package:url_launcher_web/src/shims/dart_ui_real.dart": dart_ui_real,
    "package:url_launcher/src/url_launcher_string.dart": url_launcher_string$,
    "package:plugin_platform_interface/plugin_platform_interface.dart": plugin_platform_interface,
    "package:url_launcher_platform_interface/method_channel_url_launcher.dart": method_channel_url_launcher
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_platform_interface-2.2.0/lib/src/url_launcher_platform.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_web-2.0.19/lib/url_launcher_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher-6.1.11/lib/src/legacy_api.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher-6.1.11/lib/src/types.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher-6.1.11/lib/src/url_launcher_uri.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_platform_interface-2.2.0/lib/link.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_web-2.0.19/lib/src/link.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher-6.1.11/lib/src/type_conversion.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_platform_interface-2.2.0/lib/src/types.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher-6.1.11/lib/src/url_launcher_string.dart","/zapp/pub/.pub_cache/hosted/pub.dev/url_launcher_platform_interface-2.2.0/lib/method_channel_url_launcher.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    url_launcher: url_launcher,
    url_launcher_web: url_launcher_web,
    src__legacy_api: legacy_api,
    src__types: types,
    src__url_launcher_uri: url_launcher_uri,
    link: link,
    url_launcher_platform_interface: url_launcher_platform_interface,
    src__link: link$,
    src__shims__dart_ui: dart_ui,
    url_launcher_string: url_launcher_string,
    src__type_conversion: type_conversion,
    src__types: types$,
    src__url_launcher_platform: url_launcher_platform,
    src__shims__dart_ui_real: dart_ui_real,
    src__url_launcher_string: url_launcher_string$,
    plugin_platform_interface: plugin_platform_interface,
    method_channel_url_launcher: method_channel_url_launcher
  };
}));

//# sourceMappingURL=main.js.map
